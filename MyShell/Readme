
To do:
9 / 11 / 12 / 13
Makefile
run some tests to make sure everything is working

Notes:

Implementation of 1A (redirection of stderr '2>'):
1) Creation of file with the specified name
2) Close stderr
3) use dup on fd to give specified file the fd of stderr
(will be stderr for sure because its the lowest one possible)
4) Close fd

Implementation of 1B (redirection to the end of the file '>>'):
Same as above except close stdout and open the new file with append flag.

Implementation of 2 (change prompt):
declare prompt of len of argv[1] + 2, copy argv[1] into
prompt var and append ": " to it.

Implementation of 3 (echo):
Loop over argv and print each arg, if it starts with '$' look it
up in the var array and print the var if exists.

Implementation of 4 (echo $?):
printf(status)

Implementation of 5 (change dir) -> chdir...

Implementation of 6 (repeat last command):
Save every command in two variables and whenever a new command is
received, first save it only in the first variable, if it is equal
to "!!", execute the previous command (which is saved in the 2nd variable)
else, save the new command in the 2nd variable aswell and continue regularly.

Implementation of 7 (quit) -> if "quit" break...

Implementation of 8 (ctrl-c):
overriding signal handler.

Implementation of 10 (variables):
Created a struct named 'var' which holds 2 char arrays, the first for the var name
and the other for the value. in main, hold an array of vars and whenever a new var
is entered using '$x = y' first search to see if x exists, if so change the value to y,
otherwise, extend the array and append a new var to the end.